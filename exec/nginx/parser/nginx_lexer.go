// Code generated from Nginx.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type NginxLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var nginxlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func nginxlexerLexerInit() {
	staticData := &nginxlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "';'", "'{'", "'}'", "'if'", "')'", "'('", "'\\.'", "'^'", "'location'",
		"'rewrite'", "'last'", "'break'", "'redirect'", "'permanent'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "LUA_HEADER",
		"Value", "STR_EXT", "LINE_COMMENT", "REGEXP_PREFIXED", "QUOTED_STRING",
		"SINGLE_QUOTED", "WS", "NEWLINE",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "LUA_HEADER", "Value", "STR_EXT",
		"LINE_COMMENT", "REGEXP_PREFIXED", "QUOTED_STRING", "RegexpPrefix",
		"StringCharacters", "NON_ASCII", "EscapeSequence", "SINGLE_QUOTED",
		"WS", "NEWLINE",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 23, 231, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 14, 4, 14, 122, 8, 14, 11, 14, 12, 14, 123, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15,
		1, 15, 1, 15, 3, 15, 142, 8, 15, 1, 16, 1, 16, 4, 16, 146, 8, 16, 11, 16,
		12, 16, 147, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 154, 8, 17, 1, 17, 5, 17,
		157, 8, 17, 10, 17, 12, 17, 160, 9, 17, 1, 17, 3, 17, 163, 8, 17, 1, 17,
		1, 17, 3, 17, 167, 8, 17, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 173, 8, 17,
		1, 17, 1, 17, 3, 17, 177, 8, 17, 3, 17, 179, 8, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 4, 18, 185, 8, 18, 11, 18, 12, 18, 186, 1, 19, 1, 19, 3, 19, 191,
		8, 19, 1, 19, 1, 19, 1, 20, 1, 20, 3, 20, 197, 8, 20, 1, 21, 1, 21, 4,
		21, 201, 8, 21, 11, 21, 12, 21, 202, 1, 22, 1, 22, 1, 23, 1, 23, 3, 23,
		209, 8, 23, 1, 24, 1, 24, 5, 24, 213, 8, 24, 10, 24, 12, 24, 216, 9, 24,
		1, 24, 1, 24, 1, 25, 4, 25, 221, 8, 25, 11, 25, 12, 25, 222, 1, 25, 1,
		25, 1, 26, 4, 26, 228, 8, 26, 11, 26, 12, 26, 229, 0, 0, 27, 1, 1, 3, 2,
		5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 0, 43,
		0, 45, 0, 47, 0, 49, 21, 51, 22, 53, 23, 1, 0, 9, 2, 0, 95, 95, 97, 122,
		10, 0, 33, 33, 35, 36, 38, 38, 40, 58, 61, 61, 63, 91, 93, 95, 97, 122,
		124, 124, 126, 126, 2, 0, 10, 10, 13, 13, 1, 0, 126, 126, 1, 0, 42, 42,
		2, 0, 34, 34, 92, 92, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102, 110,
		110, 114, 114, 116, 116, 2, 0, 39, 39, 92, 92, 2, 0, 9, 9, 32, 32, 247,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 1,
		55, 1, 0, 0, 0, 3, 57, 1, 0, 0, 0, 5, 59, 1, 0, 0, 0, 7, 61, 1, 0, 0, 0,
		9, 64, 1, 0, 0, 0, 11, 66, 1, 0, 0, 0, 13, 68, 1, 0, 0, 0, 15, 71, 1, 0,
		0, 0, 17, 73, 1, 0, 0, 0, 19, 82, 1, 0, 0, 0, 21, 90, 1, 0, 0, 0, 23, 95,
		1, 0, 0, 0, 25, 101, 1, 0, 0, 0, 27, 110, 1, 0, 0, 0, 29, 121, 1, 0, 0,
		0, 31, 141, 1, 0, 0, 0, 33, 145, 1, 0, 0, 0, 35, 178, 1, 0, 0, 0, 37, 182,
		1, 0, 0, 0, 39, 188, 1, 0, 0, 0, 41, 194, 1, 0, 0, 0, 43, 200, 1, 0, 0,
		0, 45, 204, 1, 0, 0, 0, 47, 206, 1, 0, 0, 0, 49, 210, 1, 0, 0, 0, 51, 220,
		1, 0, 0, 0, 53, 227, 1, 0, 0, 0, 55, 56, 5, 59, 0, 0, 56, 2, 1, 0, 0, 0,
		57, 58, 5, 123, 0, 0, 58, 4, 1, 0, 0, 0, 59, 60, 5, 125, 0, 0, 60, 6, 1,
		0, 0, 0, 61, 62, 5, 105, 0, 0, 62, 63, 5, 102, 0, 0, 63, 8, 1, 0, 0, 0,
		64, 65, 5, 41, 0, 0, 65, 10, 1, 0, 0, 0, 66, 67, 5, 40, 0, 0, 67, 12, 1,
		0, 0, 0, 68, 69, 5, 92, 0, 0, 69, 70, 5, 46, 0, 0, 70, 14, 1, 0, 0, 0,
		71, 72, 5, 94, 0, 0, 72, 16, 1, 0, 0, 0, 73, 74, 5, 108, 0, 0, 74, 75,
		5, 111, 0, 0, 75, 76, 5, 99, 0, 0, 76, 77, 5, 97, 0, 0, 77, 78, 5, 116,
		0, 0, 78, 79, 5, 105, 0, 0, 79, 80, 5, 111, 0, 0, 80, 81, 5, 110, 0, 0,
		81, 18, 1, 0, 0, 0, 82, 83, 5, 114, 0, 0, 83, 84, 5, 101, 0, 0, 84, 85,
		5, 119, 0, 0, 85, 86, 5, 114, 0, 0, 86, 87, 5, 105, 0, 0, 87, 88, 5, 116,
		0, 0, 88, 89, 5, 101, 0, 0, 89, 20, 1, 0, 0, 0, 90, 91, 5, 108, 0, 0, 91,
		92, 5, 97, 0, 0, 92, 93, 5, 115, 0, 0, 93, 94, 5, 116, 0, 0, 94, 22, 1,
		0, 0, 0, 95, 96, 5, 98, 0, 0, 96, 97, 5, 114, 0, 0, 97, 98, 5, 101, 0,
		0, 98, 99, 5, 97, 0, 0, 99, 100, 5, 107, 0, 0, 100, 24, 1, 0, 0, 0, 101,
		102, 5, 114, 0, 0, 102, 103, 5, 101, 0, 0, 103, 104, 5, 100, 0, 0, 104,
		105, 5, 105, 0, 0, 105, 106, 5, 114, 0, 0, 106, 107, 5, 101, 0, 0, 107,
		108, 5, 99, 0, 0, 108, 109, 5, 116, 0, 0, 109, 26, 1, 0, 0, 0, 110, 111,
		5, 112, 0, 0, 111, 112, 5, 101, 0, 0, 112, 113, 5, 114, 0, 0, 113, 114,
		5, 109, 0, 0, 114, 115, 5, 97, 0, 0, 115, 116, 5, 110, 0, 0, 116, 117,
		5, 101, 0, 0, 117, 118, 5, 110, 0, 0, 118, 119, 5, 116, 0, 0, 119, 28,
		1, 0, 0, 0, 120, 122, 7, 0, 0, 0, 121, 120, 1, 0, 0, 0, 122, 123, 1, 0,
		0, 0, 123, 121, 1, 0, 0, 0, 123, 124, 1, 0, 0, 0, 124, 125, 1, 0, 0, 0,
		125, 126, 5, 98, 0, 0, 126, 127, 5, 121, 0, 0, 127, 128, 5, 95, 0, 0, 128,
		129, 5, 108, 0, 0, 129, 130, 5, 117, 0, 0, 130, 131, 5, 97, 0, 0, 131,
		132, 5, 95, 0, 0, 132, 133, 5, 98, 0, 0, 133, 134, 5, 108, 0, 0, 134, 135,
		5, 111, 0, 0, 135, 136, 5, 99, 0, 0, 136, 137, 5, 107, 0, 0, 137, 30, 1,
		0, 0, 0, 138, 142, 3, 33, 16, 0, 139, 142, 3, 39, 19, 0, 140, 142, 3, 49,
		24, 0, 141, 138, 1, 0, 0, 0, 141, 139, 1, 0, 0, 0, 141, 140, 1, 0, 0, 0,
		142, 32, 1, 0, 0, 0, 143, 146, 7, 1, 0, 0, 144, 146, 3, 45, 22, 0, 145,
		143, 1, 0, 0, 0, 145, 144, 1, 0, 0, 0, 146, 147, 1, 0, 0, 0, 147, 145,
		1, 0, 0, 0, 147, 148, 1, 0, 0, 0, 148, 34, 1, 0, 0, 0, 149, 150, 5, 45,
		0, 0, 150, 151, 5, 45, 0, 0, 151, 154, 5, 32, 0, 0, 152, 154, 5, 35, 0,
		0, 153, 149, 1, 0, 0, 0, 153, 152, 1, 0, 0, 0, 154, 158, 1, 0, 0, 0, 155,
		157, 8, 2, 0, 0, 156, 155, 1, 0, 0, 0, 157, 160, 1, 0, 0, 0, 158, 156,
		1, 0, 0, 0, 158, 159, 1, 0, 0, 0, 159, 166, 1, 0, 0, 0, 160, 158, 1, 0,
		0, 0, 161, 163, 5, 13, 0, 0, 162, 161, 1, 0, 0, 0, 162, 163, 1, 0, 0, 0,
		163, 164, 1, 0, 0, 0, 164, 167, 5, 10, 0, 0, 165, 167, 5, 0, 0, 1, 166,
		162, 1, 0, 0, 0, 166, 165, 1, 0, 0, 0, 167, 179, 1, 0, 0, 0, 168, 169,
		5, 45, 0, 0, 169, 170, 5, 45, 0, 0, 170, 176, 1, 0, 0, 0, 171, 173, 5,
		13, 0, 0, 172, 171, 1, 0, 0, 0, 172, 173, 1, 0, 0, 0, 173, 174, 1, 0, 0,
		0, 174, 177, 5, 10, 0, 0, 175, 177, 5, 0, 0, 1, 176, 172, 1, 0, 0, 0, 176,
		175, 1, 0, 0, 0, 177, 179, 1, 0, 0, 0, 178, 153, 1, 0, 0, 0, 178, 168,
		1, 0, 0, 0, 179, 180, 1, 0, 0, 0, 180, 181, 6, 17, 0, 0, 181, 36, 1, 0,
		0, 0, 182, 184, 3, 41, 20, 0, 183, 185, 7, 1, 0, 0, 184, 183, 1, 0, 0,
		0, 185, 186, 1, 0, 0, 0, 186, 184, 1, 0, 0, 0, 186, 187, 1, 0, 0, 0, 187,
		38, 1, 0, 0, 0, 188, 190, 5, 34, 0, 0, 189, 191, 3, 43, 21, 0, 190, 189,
		1, 0, 0, 0, 190, 191, 1, 0, 0, 0, 191, 192, 1, 0, 0, 0, 192, 193, 5, 34,
		0, 0, 193, 40, 1, 0, 0, 0, 194, 196, 7, 3, 0, 0, 195, 197, 7, 4, 0, 0,
		196, 195, 1, 0, 0, 0, 196, 197, 1, 0, 0, 0, 197, 42, 1, 0, 0, 0, 198, 201,
		8, 5, 0, 0, 199, 201, 3, 47, 23, 0, 200, 198, 1, 0, 0, 0, 200, 199, 1,
		0, 0, 0, 201, 202, 1, 0, 0, 0, 202, 200, 1, 0, 0, 0, 202, 203, 1, 0, 0,
		0, 203, 44, 1, 0, 0, 0, 204, 205, 2, 128, 65535, 0, 205, 46, 1, 0, 0, 0,
		206, 208, 5, 92, 0, 0, 207, 209, 7, 6, 0, 0, 208, 207, 1, 0, 0, 0, 208,
		209, 1, 0, 0, 0, 209, 48, 1, 0, 0, 0, 210, 214, 5, 39, 0, 0, 211, 213,
		8, 7, 0, 0, 212, 211, 1, 0, 0, 0, 213, 216, 1, 0, 0, 0, 214, 212, 1, 0,
		0, 0, 214, 215, 1, 0, 0, 0, 215, 217, 1, 0, 0, 0, 216, 214, 1, 0, 0, 0,
		217, 218, 5, 39, 0, 0, 218, 50, 1, 0, 0, 0, 219, 221, 7, 8, 0, 0, 220,
		219, 1, 0, 0, 0, 221, 222, 1, 0, 0, 0, 222, 220, 1, 0, 0, 0, 222, 223,
		1, 0, 0, 0, 223, 224, 1, 0, 0, 0, 224, 225, 6, 25, 0, 0, 225, 52, 1, 0,
		0, 0, 226, 228, 7, 2, 0, 0, 227, 226, 1, 0, 0, 0, 228, 229, 1, 0, 0, 0,
		229, 227, 1, 0, 0, 0, 229, 230, 1, 0, 0, 0, 230, 54, 1, 0, 0, 0, 21, 0,
		123, 141, 145, 147, 153, 158, 162, 166, 172, 176, 178, 186, 190, 196, 200,
		202, 208, 214, 222, 229, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// NginxLexerInit initializes any static state used to implement NginxLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewNginxLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NginxLexerInit() {
	staticData := &nginxlexerLexerStaticData
	staticData.once.Do(nginxlexerLexerInit)
}

// NewNginxLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewNginxLexer(input antlr.CharStream) *NginxLexer {
	NginxLexerInit()
	l := new(NginxLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &nginxlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Nginx.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NginxLexer tokens.
const (
	NginxLexerT__0            = 1
	NginxLexerT__1            = 2
	NginxLexerT__2            = 3
	NginxLexerT__3            = 4
	NginxLexerT__4            = 5
	NginxLexerT__5            = 6
	NginxLexerT__6            = 7
	NginxLexerT__7            = 8
	NginxLexerT__8            = 9
	NginxLexerT__9            = 10
	NginxLexerT__10           = 11
	NginxLexerT__11           = 12
	NginxLexerT__12           = 13
	NginxLexerT__13           = 14
	NginxLexerLUA_HEADER      = 15
	NginxLexerValue           = 16
	NginxLexerSTR_EXT         = 17
	NginxLexerLINE_COMMENT    = 18
	NginxLexerREGEXP_PREFIXED = 19
	NginxLexerQUOTED_STRING   = 20
	NginxLexerSINGLE_QUOTED   = 21
	NginxLexerWS              = 22
	NginxLexerNEWLINE         = 23
)
